Index: src/main/java/edu/sjsu/cs/SellerAddPageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.sjsu.cs;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.ResourceBundle;\n\nimport edu.sjsu.cs.User.Customer;\nimport edu.sjsu.cs.User.Product;\nimport javafx.event.ActionEvent;\nimport javafx.event.EventHandler;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.fxml.Initializable;\nimport javafx.geometry.Insets;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.TextArea;\nimport javafx.scene.control.TextField;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.layout.*;\nimport javafx.scene.paint.Color;\nimport javafx.stage.FileChooser;\nimport edu.sjsu.cs.Store_Properties.Store;\nimport edu.sjsu.cs.User.Seller;\nimport edu.sjsu.cs.User.Product;\nimport javafx.stage.Stage;\n\n\npublic class SellerAddPageController implements Initializable {\n\n    @FXML\n    private Label addText;\n\n    @FXML\n    private Button addButton;\n\n    @FXML\n    private TextArea description;\n\n    @FXML\n    private TextField itemName, itemID;\n\n    @FXML\n    private TextField itemPrice;\n\n    @FXML\n    private Button returnButton;\n    @FXML\n    private String url;\n    private Product product;\n    private Store store;\n    private Seller seller;\n    @FXML\n    private Stage stage;\n    private Scene scene;\n    @FXML\n    private Parent root;\n\n    public void clickAdd(){\n        String id = itemID.getText();\n        String name = itemName.getText();\n        String priceText = itemPrice.getText();\n        double price = Double.parseDouble(priceText);\n        Product item = new Product(id, name, price);\n        Main.getStore().addProduct(item);\n        addText.setText(\"Item has been added\");\n    }\n\n    public void clickReturn()throws IOException{\n        root = FXMLLoader.load(getClass().getResource(\"SellerMainPage.fxml\"));\n\n        stage = (Stage) returnButton.getScene().getWindow();\n        stage.setScene(new Scene(root));\n    }\n\n\n\n    public void initialize(URL location, ResourceBundle resources) {\n        this.store = Main.getStore();\n        this.seller = Main.getSeller();\n    }\n\n}\n
===================================================================
diff --git a/src/main/java/edu/sjsu/cs/SellerAddPageController.java b/src/main/java/edu/sjsu/cs/SellerAddPageController.java
--- a/src/main/java/edu/sjsu/cs/SellerAddPageController.java	
+++ b/src/main/java/edu/sjsu/cs/SellerAddPageController.java	
@@ -1,31 +1,21 @@
 package edu.sjsu.cs;
 
-import java.io.File;
 import java.io.IOException;
 import java.net.URL;
 import java.util.ResourceBundle;
 
 import edu.sjsu.cs.User.Customer;
 import edu.sjsu.cs.User.Product;
-import javafx.event.ActionEvent;
-import javafx.event.EventHandler;
 import javafx.fxml.FXML;
 import javafx.fxml.FXMLLoader;
 import javafx.fxml.Initializable;
-import javafx.geometry.Insets;
 import javafx.scene.Parent;
 import javafx.scene.Scene;
 import javafx.scene.control.Button;
 import javafx.scene.control.Label;
 import javafx.scene.control.TextArea;
 import javafx.scene.control.TextField;
-import javafx.scene.image.ImageView;
-import javafx.scene.layout.*;
-import javafx.scene.paint.Color;
-import javafx.stage.FileChooser;
-import edu.sjsu.cs.Store_Properties.Store;
 import edu.sjsu.cs.User.Seller;
-import edu.sjsu.cs.User.Product;
 import javafx.stage.Stage;
 
 
Index: src/main/java/edu/sjsu/cs/SellerMainPageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.sjsu.cs;\n\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.ResourceBundle;\n\nimport edu.sjsu.cs.Store_Properties.Store;\nimport edu.sjsu.cs.User.Product;\nimport edu.sjsu.cs.User.Seller;\nimport javafx.event.ActionEvent;\nimport javafx.event.EventHandler;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.fxml.Initializable;\nimport javafx.geometry.Insets;\nimport javafx.scene.Node;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.ChoiceBox;\nimport javafx.scene.control.Label;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.layout.*;\nimport javafx.scene.paint.Color;\nimport javafx.stage.Stage;\nimport javafx.scene.control.Button;\n\n\npublic class SellerMainPageController implements Initializable {\n    private Stage stage;\n    private Scene scene;\n    private Parent root;\n    @FXML\n    private FlowPane itemDisplayArea;\n    private Store store;\n    private Seller seller;\n\n    private String[] profileSelection = {\"Remove\", \"Sign Out\"};\n\n    @FXML\n    private ChoiceBox<String> sellerChoiceBox;\n\n\n    public void clickRemove(ActionEvent event)throws IOException{\n        root = FXMLLoader.load(getClass().getResource(\"SellerRemovePage.fxml\"));\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\n        scene = new Scene(root);\n        stage.setScene(scene);\n        stage.show();\n\n    }\n\n    public void clickLogOut(ActionEvent event)throws IOException{\n        root = FXMLLoader.load(getClass().getResource(\"SellerLoginPage.fxml\"));\n        stage = (Stage)((Node)event.getSource()).getScene().getWindow();\n        scene = new Scene(root);\n        stage.setScene(scene);\n        stage.show();\n    }\n\n    public void initialize(URL location, ResourceBundle resources) {\n\n        this.store = Main.getStore();\n        this.seller = Main.getSeller();\n        sellerChoiceBox.getItems().addAll(profileSelection);\n        sellerChoiceBox.setValue(seller.getUsername());\n\n        sellerChoiceBox.setOnAction(new EventHandler<ActionEvent>() {\n\n            @Override\n            public void handle(ActionEvent event) {\n                String selected = sellerChoiceBox.getValue();\n                if(selected.equals(\"Remove\")){\n                    try{\n                        clickRemove(event);\n                    }\n                    catch(IOException e){\n                        System.out.println(\"Error switching to seller remove page\");\n                    }\n                }\n\n                if(selected.equals(\"Sign Out\")){\n                    try{\n                        clickLogOut(event);\n                    }\n                    catch(IOException e){\n                        System.out.println(\"Error switching to customer profile page\");\n                    }\n                }\n            }\n\n        });\n        displayItem(this.store);\n    }\n\n    private void displayItem(Store seller){\n        List<AnchorPane> sellerItem = new ArrayList<>();\n        for(Product product: store.getProducts().values()){\n            sellerItem.add(new sellerProductCard(product.getName(), product.getPrice(), new ImageView(), product.getProductId()));\n        }\n        FlowPane flowPane = itemDisplayArea;\n\n        for (AnchorPane item : sellerItem) {\n            flowPane.getChildren().add(item);\n        }\n    }\n\n\n}\n\n\n\nclass sellerProductCard extends AnchorPane {\n    public sellerProductCard(String name, double price, ImageView image, String id) {\n\n        this.setPrefSize(200, 200);\n        this.setBackground(new Background(new BackgroundFill(Color.WHITE, CornerRadii.EMPTY, Insets.EMPTY)));\n        Label productName = new Label();\n        productName.setText(name + \" - \" + Double.toString(price) + \" $\");\n\n        Button addMyStore = new Button(\"Add to My Store\");\n        addMyStore.setOnAction(new EventHandler<ActionEvent>() {\n\n            @Override\n            public void handle(ActionEvent event){\n                if (Main.getSeller().sellerItems.contains(Main.getStore().getProducts().get(id))){\n                    Main.getSeller().sellerItems.get(Main.getSeller().sellerItems.indexOf(Main.getStore().getProducts().get(id))).setQuantity(Main.getSeller().sellerItems.get(Main.getSeller().sellerItems.indexOf(Main.getStore().getProducts().get(id))).getQuantity() + 1);\n                    System.out.println(\"Product \" + name + \" increased quantity in Store\");\n                }\n                else{\n                    Main.getSeller().sellerItems.add(Main.getStore().getProducts().get(id));\n                    Main.getSeller().sellerItems.get(Main.getSeller().sellerItems.indexOf(Main.getStore().getProducts().get(id))).setQuantity(1);\n                    System.out.println(\"Product \" + name + \" added to Store\");\n                }\n            }\n        });\n\n\n        ImageView productImage = new ImageView();\n        productImage.setFitHeight(150);\n        productImage.setFitWidth(200);\n        productImage.setPreserveRatio(true);\n        productImage.setImage(new javafx.scene.image.Image(getClass().getResource(\"img/emart_logo.jpg\").toExternalForm()));\n\n        BorderPane productBorder = new BorderPane();\n        productBorder.setPrefSize(200, 200);\n        AnchorPane.setTopAnchor(productBorder, 0.0);\n        AnchorPane.setLeftAnchor(productBorder, 0.0);\n        productBorder.setCenter(productImage);\n        productBorder.setTop(productName);\n        productBorder.setBottom(addMyStore);\n\n        this.getChildren().add(productBorder);\n\n    }\n}\n
===================================================================
diff --git a/src/main/java/edu/sjsu/cs/SellerMainPageController.java b/src/main/java/edu/sjsu/cs/SellerMainPageController.java
--- a/src/main/java/edu/sjsu/cs/SellerMainPageController.java	
+++ b/src/main/java/edu/sjsu/cs/SellerMainPageController.java	
@@ -6,7 +6,6 @@
 import java.util.List;
 import java.util.ResourceBundle;
 
-import edu.sjsu.cs.Store_Properties.Store;
 import edu.sjsu.cs.User.Product;
 import edu.sjsu.cs.User.Seller;
 import javafx.event.ActionEvent;
Index: src/main/java/edu/sjsu/cs/SellerRemovePageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.sjsu.cs;\n\nimport java.io.IOException;\nimport java.net.URL;\nimport java.security.ProtectionDomain;\nimport java.util.*;\n\nimport edu.sjsu.cs.Store_Properties.Store;\nimport edu.sjsu.cs.User.Product;\nimport edu.sjsu.cs.User.Seller;\nimport javafx.beans.value.ChangeListener;\nimport javafx.beans.value.ObservableValue;\nimport javafx.event.ActionEvent;\nimport javafx.event.EventHandler;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.fxml.Initializable;\nimport javafx.geometry.Insets;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.*;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.MouseEvent;\nimport javafx.scene.layout.*;\nimport javafx.scene.paint.Color;\nimport javafx.stage.Stage;\n\npublic class SellerRemovePageController implements Initializable{\n\n\n    private Store store;\n    private Seller seller;\n    private Stage stage;\n    private Scene scene;\n    @FXML\n    private Parent root;\n    @FXML\n    private Button returnButton,removeButton ;\n    //@FXML\n   // private ListView<String> listOfProducts;\n    @FXML\n    Label removeText;\n    @FXML\n    private FlowPane itemDisplayArea;\n\n    private void displayItem(Seller Seller){\n        List<AnchorPane> sellerItems = new ArrayList<>();\n        for(Product product: Seller.getSellerItems()){\n            sellerItems.add(new SellerRemoveProductCard(product.getName(), product.getPrice(), new ImageView(), product.getProductId(), product.getQuantity()));\n        }\n        FlowPane display = itemDisplayArea;\n\n        display.getChildren().clear();\n\n        for (AnchorPane sellerItem : sellerItems) {\n            display.getChildren().add(sellerItem);\n        }\n    }\n\n    public void clickReturn()throws IOException{\n        root = FXMLLoader.load(getClass().getResource(\"SellerMainPage.fxml\"));\n\n        stage = (Stage) returnButton.getScene().getWindow();\n        stage.setScene(new Scene(root));\n    }\n\n    public void initialize(URL location, ResourceBundle resources) {\n\n        //this.store = Main.getStore();\n        this.seller = Main.getSeller();\n\n        //choiceBox.getItems().addAll((Collection<? extends String>) products);\n        //listOfProducts = (ListView<String>) Main.getStore().getProducts();\n        displayItem(seller);\n\n    }\n\n    class SellerRemoveProductCard extends AnchorPane {\n        private double productPrice;\n        public void setPrice(double price) {\n            this.productPrice = price;\n        }\n\n        public double getPrice() {\n            return productPrice;\n        }\n\n\n\n        public SellerRemoveProductCard(String name, double price, ImageView image, String id, int quantity) {\n\n            this.setPrefSize(200, 200);\n            this.setBackground(new Background(new BackgroundFill(Color.WHITE, CornerRadii.EMPTY, Insets.EMPTY)));\n            Label productName = new Label();\n            productName.setText(name + \" - \" + Double.toString(price) + \" $\");\n\n            Button deleteFromSeller = new Button(\"Remove\");\n            deleteFromSeller.setOnAction(new EventHandler<ActionEvent>() {\n\n                @Override\n                public void handle(ActionEvent event){\n                    Main.getSeller().sellerItems.remove(Main.getStore().getProducts().get(id));\n                    displayItem(Main.getSeller());\n                    System.out.println(\"Product \" + name + \" deleted from store\");\n                }\n            });\n\n            TextField quantityField = new TextField();\n            quantityField.setPromptText(\"Enter quantity\");\n            quantityField.setPrefWidth(100);\n            quantityField.setText(Integer.toString(quantity));\n\n            quantityField.textProperty().addListener(new ChangeListener<String>() {\n                @Override\n                public void changed(ObservableValue<? extends String> observable, String oldValue, String newValue) {\n                    // This code will be executed whenever the text of the TextField changes\n                    System.out.println(\"Quantity changed from \" + oldValue + \" to \" + newValue);\n                }\n            });\n\n\n\n            HBox bottomHBox = new HBox();\n            bottomHBox.getChildren().add(deleteFromSeller);\n            bottomHBox.getChildren().add(quantityField);\n\n            ImageView productImage = new ImageView();\n            productImage.setFitHeight(150);\n            productImage.setFitWidth(200);\n            productImage.setPreserveRatio(true);\n            productImage.setImage(new javafx.scene.image.Image(getClass().getResource(\"img/emart_logo.jpg\").toExternalForm()));\n\n            BorderPane productBorder = new BorderPane();\n            productBorder.setPrefSize(200, 200);\n            AnchorPane.setTopAnchor(productBorder, 0.0);\n            AnchorPane.setLeftAnchor(productBorder, 0.0);\n            productBorder.setCenter(productImage);\n            productBorder.setTop(productName);\n            productBorder.setBottom(bottomHBox);\n\n            this.productPrice = quantityField.getText().isEmpty() ? price : price * Integer.parseInt(quantityField.getText());\n            this.getChildren().add(productBorder);\n\n        }\n    }\n\n\n}\n\n\n\n
===================================================================
diff --git a/src/main/java/edu/sjsu/cs/SellerRemovePageController.java b/src/main/java/edu/sjsu/cs/SellerRemovePageController.java
--- a/src/main/java/edu/sjsu/cs/SellerRemovePageController.java	
+++ b/src/main/java/edu/sjsu/cs/SellerRemovePageController.java	
@@ -2,10 +2,8 @@
 
 import java.io.IOException;
 import java.net.URL;
-import java.security.ProtectionDomain;
 import java.util.*;
 
-import edu.sjsu.cs.Store_Properties.Store;
 import edu.sjsu.cs.User.Product;
 import edu.sjsu.cs.User.Seller;
 import javafx.beans.value.ChangeListener;
@@ -20,7 +18,6 @@
 import javafx.scene.Scene;
 import javafx.scene.control.*;
 import javafx.scene.image.ImageView;
-import javafx.scene.input.MouseEvent;
 import javafx.scene.layout.*;
 import javafx.scene.paint.Color;
 import javafx.stage.Stage;
